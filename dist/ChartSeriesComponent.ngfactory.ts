/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './ChartSeriesComponent';
import * as import1 from '@angular/core/src/linker/view';
export class Wrapper_ChartSeriesComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ChartSeriesComponent;
  /*private*/ _changed:boolean;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  subscription4:any;
  subscription5:any;
  subscription6:any;
  subscription7:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ChartSeriesComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
    (this.subscription4 && this.subscription4.unsubscribe());
    (this.subscription5 && this.subscription5.unsubscribe());
    (this.subscription6 && this.subscription6.unsubscribe());
    (this.subscription7 && this.subscription7.unsubscribe());
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean,emit4:boolean,emit5:boolean,emit6:boolean,emit7:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.click.subscribe(_eventHandler.bind(view,'click'))); }
    if (emit1) { (this.subscription1 = this.context.afterAnimate.subscribe(_eventHandler.bind(view,'afterAnimate'))); }
    if (emit2) { (this.subscription2 = this.context.checkboxClick.subscribe(_eventHandler.bind(view,'checkboxClick'))); }
    if (emit3) { (this.subscription3 = this.context.hide.subscribe(_eventHandler.bind(view,'hide'))); }
    if (emit4) { (this.subscription4 = this.context.legendItemClick.subscribe(_eventHandler.bind(view,'legendItemClick'))); }
    if (emit5) { (this.subscription5 = this.context.mouseOver.subscribe(_eventHandler.bind(view,'mouseOver'))); }
    if (emit6) { (this.subscription6 = this.context.mouseOut.subscribe(_eventHandler.bind(view,'mouseOut'))); }
    if (emit7) { (this.subscription7 = this.context.show.subscribe(_eventHandler.bind(view,'show'))); }
  }
}